#+TITLE: A Bite of Emacs and ESS

#+html: <p align="center"><img src="https://github.com/mlindsk/a_bite_of_emacs/blob/master/img/emacs.png" /></p>

* [[file:img/emacs.png][Emacs]]

  - Text editor (on steroids)

  - Initial release in 1976 (43 years ago!)

    + Richard Stallman began the GNU Emacs in 1984 (free version)

  - Stable release 26.2

  - Cross-platform

  - Active community

  - Extensible and customizable

* A Comprehensive List of Packages
  - https://github.com/emacs-tw/awesome-emacs

* How To Use Emacs

 1) Learn the basics and be happy. 

 2) Learn some advanced commands that suit your needs. 

 3) Constantly look for new commands to speed up editing. 

 4) Progress to write your own totally new Emacs commands.

* The Basics

** Buffers and Mini buffers

   - A *buffer* is an interface between Emacs and a file or process.

     + Equivalent to tabs (and panes are the actual content).)

   - The *minibuffer* is a special buffer.

     + Often a window occupying a single line.

** Windows and Frames

   - A *window* is a view onto a buffer.

     + Two windows are what you would split screen in other contexts.

   - A *frame* is the `container`.

     + Called a window in most other contexts.
   
** Keybindings

*** Nomenclature

   - ~C-<key>~            : Press control and <key>

   - ~C-<key1> C-<key2>~  : Press control and <key1> release and 
                          press control and <key2>

   - ~M-x~ (M = Meta key) : Alt-x -> type a command; e.g. ~list-packages~
** Some Important Ones

    1) ~C-g~        : cancel the current command
    2) ~C-x b~      : switch to other buffer
    3) ~M-<~        : go to beginning of buffer
    4) ~M->~        : go to end of buffer
    5) ~C-s~        : incremental search
    6) ~C-r~        : search backward
    7) ~C-e~        : end of line
    8) ~C-a~        : beginning of line
    9) ~C-x 1~      : destroy all windows but the this
    10) ~C-x 2~     : Split horizontally
    11) ~C-x 3~     : split vertically
    12) ~C-x o~     : move to next window
    13) ~C-x k~     : kill buffer
    14) ~C-x f~     : find file
    15) ~C-x C-b~   : Ibuffer (enhanced buffer overview)
    16) ~C-M-s~     : incremental search using regexp
    17) ~M-%~       : replace string 
    18) ~C-M-%~     : replace string regexp
    19) ~C-x C-c~   : end emacs (useful on remote servers)
    20) ~C-h k~     : describe-keybinding
    21) ~C-h f~     : describe function
    22) ~C-h m~     : man page of the major mode

    23) Some not so important ones
	1) ~M-c~ : capitalize word (~M-capitalize-word~)
	2) ~M-l~ : downcase word   (~M-downcase-word~)
	3) ~M-u~ : upcase word     (~M-upcase-word~)

    [[https://www.gnu.org/software/emacs/refcards/pdf/refcard.pdf][Cheatsheet]]

    [[https://www.masteringemacs.org/article/mastering-key-bindings-emacs][Make your own keybindings]]

*** Killing and Yanking

    - Also known as _cut_ and _paste_

    - But more general because of the *killring*

      + ~C-w~ : Kill   (cut)

      + ~M-w~ : Saving (copy) to the killring

      + ~C-y~ : Yank   (paste)

    - The killring can be seen as a _stack_ with the 60 most recent kills

      + ~C-y M-y~ : Insert from killring
*** Rectangles

    - ~M-x kill-rectangle~ (~C-x r k~)

    - ~M-x yank-rectangle~ (~C-x r y~)

    *Example - Swap columns:*

      A   1
      
      B   2
      
      C   3

** Modes

*** Major Modes

    - Every buffer possesses a *major mode*. 

    - It determines the editing behavior of Emacs while that buffer is current.

    - It is typically some `language-mode` like

      + *r-mode*

      + *c++-mode*

      + *python-mode*

      + *makefile-mode*

      + *text-mode*

      + *markdown-mode*

      + *pandoc-mode*

      + ...

    - ~M-x <major-mode>~ : change the major mode

*** Minor Modes

    - A buffer can have several *minor modes*

      + Auto correction

      + Tab Completion

      + Matching parenthesis

      + Macros

      + ...

* Multiple Cursors

  - https://github.com/magnars/multiple-cursors.el

  *Example*
  
  #+BEGIN_SRC text
    X 1.000 0.054 
    Y 0.054 1.000 
    Z 1.000 0.775 
  #+END_SRC
  
* Dired Mode
 
  Dired is a file browsing system within Emacs

  - ~C-x d~            : Open dired mode

  - ~S-^~              : Up-directory

  - ~a~                : Enter directory

  - ~q~                : quit

  - ~m~                : mark file

  - ~u~                : unmark file

  - ~d~                : mark for deletion

  - ~x~                : delete files marked for deletion

  - ~S-!~              : apply a function to file

  - ~C-x C-q~          : enter editing mode

  - ~C-c C-c~          : leave editing mode

  - ~M-S-! nautilus .~ : open nautilus here: 
   
* Bookmarks
   
  - ~C-x r m~ : Create new bookmark (can be a file or a folder)
  
  - ~C-x r b~ : Go to bookmark
  
  - ~C-x r l~ : List of all bookmarks
  
* The init.el File

  - When Emacs starts, it initialize your configuration file *.init*

    + located in the *.emacs* folder.

    + in a fresh install it contains nothing!

** Melpa

   - A package repository for Emacs

     + https://melpa.org/#/getting-started
       
  #+BEGIN_SRC emacs-lisp
  (require 'package)
  (add-to-list 'package-archives
  '("melpa-stable" . "https://stable.melpa.org/packages/") t)
  (package-initialize)
  #+END_SRC

   - ~M-x package-install <package>~

   - ~M-x list-packages~

   - Consider the ~paradox~ package

     + A lot easier to navigate with

     + ~M-x paradox-list-packages~

* YASsnippets

  - A for template system for Emacs

  - ~yasnippet-snippets~ : Collection of snippets that supports e.g.
    + ~c-mode~
    + ~c++-mode~
    + ~python-mode~
    + ~lisp-mode~
    + ~latex-mode~
    + ~bibtex-mode~
    + ~org-mode~
    + ~markdown-mode~

  - ~yas-describe-tables~ : Snippets and keys for current mode

  - No official snippets for ~r-mode~
    + But easy to create

  #+BEGIN_SRC
  # -*- mode: snippet -*-
  # name: lapply
  # key: lap
  # group: *apply family
  # --
  lapply($1, function(x) $0)
  #+END_SRC

* AucTex

  - A major mode for using Latex within Emacs

  - Some useful keybindings

    + ~C-c C-c~    : compile, bibtex, view document
    + ~C-c C-e~    : Start an environment (itemize, equation, tabular, etc.)
    + ~C-c RETURN~ : Start macro
    + ~C-c (~      : Insert label
    + ~C-c )~      : \ref
    + ~C-c [~      : \cite, \citep, etc.
    + ~S-=~        : Contents
    
    [[ftp://ftp.gnu.org/gnu/auctex/11.82-extra/tex-ref.pdf][AucTeX cheatsheet]]

  - *LaTeX-math-mode* - support for math formatting

    + ~C-c ~~  : Toggle
    + ~`~      : Prefix key

  - YASsnippets within AucTeX!

  - Minimal setup in init file:

  #+BEGIN_SRC emacs-lisp
  ;; Remove sub and superscript sepcial fonting
  (setq font-latex-fontify-script nil)
  ;; Turn on RefTeX in AUCTeX
  (add-hook 'LaTeX-mode-hook 'turn-on-reftex)
  ;; Activate nice interface between RefTeX and AUCTeX
  (setq reftex-plug-into-auctex t)
  #+END_SRC

* Emacs Speaks Statistics

  - [[https://ess.r-project.org/][ESS]]

  - Support for various statistical analysis languages

    + *R*

    + *Julia*

    + *SAS*

    + *Stata*

    + *JAGS*

  - inferior ESS (iESS) mode is the REPL (interactive shell) we use

** R

  - In init.el put ~(reqiure 'ess-rutils)~

  - Some useful commands
    + ~C-ENTER~     : send line or region to iESS
    + ~C-c C-UP~    : eval buffer till point
    + ~C-c C-DOWN~  : eval buffer from point
    + ~C-c C-f~     : eval function
    + ~C-c C-s~     : switch process
    + ~C-x C-v~     : documentation for object at point
    + ~C-M-a~       : go to beginning of function
    + ~C-M-e~       : go to end of function
    + ~C-UP~        : previous command in REPL
    + ~C-c C-c~     : break process in REPL

  - The family of ~ess-rutils~ (~C-c C. <char>~) 
    + ~o~ : rdired
    + ~d~ : change the current working directory
    + ~r~ : list all available pkgs (and intsall some if you want)
    + ~l~ : list all local (installed) pkgs

  - ESS drop-down menu

  [[http://ess.r-project.org/refcard.pdf][Cheatsheet]]

*** Debugging

    - ~C-c C-t <char>~ : The family of ~ess-dev-map~

      + ~b~ : Set breakpoint

      + ~k~ : Kill breakpoint

      + ~n~ : Next breakpoint

      + ~p~ : Previous breakpoint

    - Debugging in ~ess-debug-mode-map~

      + ~M-C~ : Continue

      + ~M-N~ : Nex line

      + ~M-Q~ : Quit

*** Package mode

    - Integrates nicely with ~devtools~ and ~roxygen2~

    - ~M-x ess-r-devtools-<what>~

      + ~create-package~

      + ~load-package~

      + ~check-package~

      + ~test-package~

      + ~document-package~

      + ~install~

*** Controlling buffer display

    - Default is
    
   #+BEGIN_SRC text
   ----------------------------
   |            |             |
   |            |             |
   |            |             |
   |   Source   |   Console   |
   |            |             |
   |            |             |
   |            |             |
   ----------------------------
   #+END_SRC

   - ESS manual section 3.5 - Controlling buffer display

   #+BEGIN_SRC text
   ----------------------------
   |            |             |
   |   Source   |             |
   |            |             |
   |------------| Environment |
   |            |             |
   |   Console  |             |
   |            |             |
   ----------------------------
   #+END_SRC

   - ~ess-r-dired~ : Bring up the environment buffer

*** Tags

    - ~C-c C-e C-t~ : create tags for directory (inside an ~.R~ file)

    - ~M-.~         : navigate to tag (a function)

    - ~M-,~         : return

    - In package mode

      + ~ess-r-devtools-load-package~ : all tags available
    
* Polymode

  - Several major modes in one buffer

  - https://polymode.github.io/

  - https://github.com/polymode/poly-R


** Rmarkdown
   
   - ~poly-markdown+R-mode~

   - Templates
     
     + ~M-x ~poly-r-rmarkdown-create-from-template~

     + Or in ~.Rmd~ files

       1. Templates from the RMarkdown dropdown menu

       2. ~M-n M-m~

* Magit

  - A major mode for *git* version control

  - [[https://www.masteringemacs.org/article/introduction-magit-emacs-mode-git][Vanilla tutorial]]

  - [[https://www.youtube.com/watch?v=vQO7F2Q9DwA&feature=youtu.be][Video tutorial]]

  - [[https://magit.vc/screenshots/][Screenshots tutorial]]

  - Init setup:

  #+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-x g") 'magit-status)
  #+END_SRC
